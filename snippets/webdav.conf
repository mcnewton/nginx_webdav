#
#  General settings for WebDAV config with fixups for different
#  broken clients
#
#  From what I can tell, all of the mainstream O/S based WebDav clients
#  are broken and don't follow the spec in subtly different ways.
#
#  This file should be included in a location{} block that needs
#  WebDav access.
#

#
#  MacOS Sends MKCOL without the trailing slash
#  MOVE with trailing slash on URI but no trailing slash on destination
#
#  Linux sends MKCOL with trailing slash
#  but MOVE with no trailing slash on URI or destination
#
#  Windows sends MOVE with no trailing slash on URI or destination
#

#
#  Add / to URI with MKCOL, if needed
#

if ($request_method = MKCOL) {
	rewrite ^(.*[^/])$ $1/;
}


#
#  Handle missing trailing slash with MOVE and DELETE
#
#  Can't do nested or complex if statements in nginx, so use $s
#  (source) and $t (target) to track the state.
#

set $s A;
set $t A;

#  Check if it's a MOVE or DELETE operation
if ($request_method = MOVE) {
        set $s B$s;
	set $t B$t;
}

if ($request_method = DELETE) {
        set $s B$s;
}


#  Update URI if trailing slash is missing for MOVE or DELETE
if (-d $request_filename) {
        set $s C$s;
}

if ($s = "CBA") {
	rewrite ^(.*[^/])$ $1/;
}


#  More checks for Destination - first make sure the source is a
#  directory...
if ($uri ~ ^.*/$) {
	set $t C$t;
}

#  ...and destination doesn't already end in slash...
if ($http_destination !~ ^.*/$) {
	set $t D$t;
}

#  ...then fix up the destination by adding a slash on the end. <sigh>
if ($t = "DCBA") {
	set $destination $http_destination;
	set $destination $destination/;
	more_set_input_headers "Destination: $destination";
}


#
#  Fix up for Windows, which sends PROPPATCH: return a fake "OK" to
#  keep it happy.
#
#  https://github.com/arut/nginx-dav-ext-module/issues/52
#  http://netlab.dhis.org/wiki/ru:software:nginx:webdav (Russian)
#

if ($request_method = PROPPATCH) {
	add_header	Content-Type 'text/xml';
	return		207 '<?xml version="1.0"?><a:multistatus xmlns:a="DAV:"><a:response><a:propstat><a:status>HTTP/1.1 200 OK</a:status></a:propstat></a:response></a:multistatus>';
}


#
#  General "enable WebDav" stuff
#
dav_methods		PUT DELETE MKCOL COPY MOVE;
dav_ext_methods		PROPFIND OPTIONS LOCK UNLOCK;

client_body_temp_path	/tmp/nginx;
client_max_body_size	0;
create_full_put_path	on;

#  Defined in conf.d/webdav.conf
dav_ext_lock		zone=xfer_webdav;
dav_access		user:rw group:rw all:r;
